# Danny Data Cleaning

Years being included:
- 2001-2022
- 2017-2022

One table:
- unit of analyses -- year + country

**Datasets**
- Food Security Indicators
- SDG Indicators
- Population and Employment


## Food Security Indicators

```{r}
library(tidyverse)
library(dplyr)
library(tidyr)

file_path_fs <- "../raw_data/Food_Security_All_Data.csv"
FS_raw <- read.csv(file_path_fs, fileEncoding = "ISO_8859-1")

year_cols <- paste0("Y", 2001:2022)
FS_clean <- FS_raw %>% select(Area, Item, Element, Unit, all_of(year_cols))

FS_clean_long <- FS_clean %>%
  pivot_longer(cols = all_of(year_cols),
               names_to = "Year",
               values_to = "Value")

FS_clean_long <- FS_clean_long %>%
  mutate(Year = as.integer(sub("Y", "", Year))) 

# NAs are all because they are the three year averages, so taking them out
FS_clean_long <- FS_clean_long %>%
  mutate(Value = ifelse(Value == "", NA, Value))
FS_clean_long <- FS_clean_long %>%
  drop_na(Value)

FS_clean_long <- FS_clean_long %>%
  mutate(Value = as.numeric(gsub("<", "", Value)))

# taking out duplicate rows
FS_clean_long <- FS_clean_long %>%
  distinct(Area, Year, Item, .keep_all = TRUE)

FS_clean_wide <- FS_clean_long %>%
  select(Area, Year, Item, Value) %>%
  pivot_wider(names_from = Item, values_from = Value)

FS_clean_wide <- FS_clean_wide %>%
  rename_all(tolower) %>%
  rename(country = area)

csv_path <- "../clean_data/Food_Security_Clean.csv"
write.csv(FS_clean_wide, file = csv_path, row.names = FALSE)

FS_short <- FS_clean_wide %>%
  filter(year %in% c(
        "2017", "2018", "2019", "2020", "2021", "2022"
    ))

csv_path <- "../clean_data/Food_Security_Clean_short.csv"
write.csv(FS_short, file = csv_path, row.names = FALSE)

```


## SDG Indicators
```{r}
file_path_sdg <- "../raw_data/SDG_All_Data.csv"
SDG_raw <- read.csv(file_path_sdg, fileEncoding = "ISO_8859-1")

year_cols <- paste0("Y", 2001:2022)
SDG_clean <- SDG_raw %>% select(Area, Item, Element, Unit, all_of(year_cols))

SDG_clean_long <- SDG_clean %>%
  pivot_longer(cols = all_of(year_cols),
               names_to = "Year",
               values_to = "Value") %>%
  mutate(Year = as.integer(sub("Y", "", Year))) %>%
  mutate(Value = as.numeric(gsub("<", "", Value)))

SDG_clean_long <- SDG_clean_long %>%
  mutate(Item = paste0(Item, " (", Unit, ")")) 

SDG_clean_long <- SDG_clean_long %>%
  distinct(Area, Year, Item, .keep_all = TRUE)

SDG_clean_wide <- SDG_clean_long %>%
  select(Area, Year, Item, Value) %>%
  pivot_wider(names_from = Item, values_from = Value) 

names(SDG_clean_wide) <- names(SDG_clean_wide) %>%
  gsub("^[0-9.]+\\s*", "", .)

SDG_clean_wide <- SDG_clean_wide %>%
  rename_all(tolower) %>%
  rename(country = area)

csv_path <- "../clean_data/SDG_indicators_clean.csv"
write.csv(SDG_clean_wide, file = csv_path, row.names = FALSE)

SDG_short <- SDG_clean_wide %>%
  filter(year %in% c(
        "2017", "2018", "2019", "2020", "2021", "2022"
    ))

csv_path <- "../clean_data/SDG_indicators_clean_short.csv"
write.csv(SDG_short, file = csv_path, row.names = FALSE)

```

## Population Data
```{r}
file_path_pop <- "../raw_data/Population_All_Data.csv"
pop_raw <- read.csv(file_path_pop, fileEncoding = "ISO_8859-1")

years_col <- paste0("Y", 2001:2022)
pop_clean <- pop_raw %>% select(Area, Element, Unit, all_of(year_cols))

pop_clean_long <- pop_clean %>%
  pivot_longer(cols = all_of(year_cols),
               names_to = "Year",
               values_to = "Value") %>%
  mutate(Year = as.integer(sub("Y", "", Year)))

pop_clean_long <- pop_clean_long %>%
  mutate(Element = paste0(Element, " (", Unit, ")"))

pop_clean_long <- pop_clean_long %>%
  mutate(Value = as.numeric(Value))

pop_clean_long <- pop_clean_long %>%
  distinct(Area, Year, Element, .keep_all = TRUE)

pop_clean_wide <- pop_clean_long %>%
  pivot_wider(names_from = Element, values_from = Value)

pop_clean_wide <- pop_clean_wide %>%
  rename_all(tolower) %>%
  rename(country = area)

csv_path <- "../clean_data/population_clean.csv"
write.csv(pop_clean_wide, file = csv_path, row.names = FALSE)

pop_short <- pop_clean_wide %>%
  filter(year %in% c(
        "2017", "2018", "2019", "2020", "2021", "2022"
    ))

csv_path <- "../clean_data/population_clean_short.csv"
write.csv(pop_short, file = csv_path, row.names = FALSE)

```


